name: Docker Multi-Arch CI

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: kshitizb/vnstat-dashboard

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine version tag
      id: version
      run: |
        git fetch --tags

        LAST_TAG=$(git tag -l "v*" | grep -E '^v[0-9]+\.[0-9]+$' | sort -V | tail -n1)

        if [ -z "$LAST_TAG" ]; then
          VERSION="v1.0"
        else
          MAJOR=$(echo $LAST_TAG | cut -d. -f1 | tr -d 'v')
          MINOR=$(echo $LAST_TAG | cut -d. -f2)
          NEXT_MINOR=$((MINOR + 1))
          VERSION="v${MAJOR}.${NEXT_MINOR}"
        fi

        # Create and push the new version tag only if not already tagged
        if git rev-parse "$VERSION" >/dev/null 2>&1; then
          echo "Version $VERSION already exists. Skipping tag."
        else
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $VERSION
          git push origin $VERSION
        fi

        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "âœ… Determined version: $VERSION"

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
          ${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
